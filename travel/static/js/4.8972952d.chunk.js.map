{"version":3,"sources":["components/ui/Modal.module.css","components/ui/Modal.tsx","pages/SearchPage.tsx"],"names":["module","exports","Modal","props","className","styles","modal","style","transform","show","opacity","children","memo","prevProps","nextProps","AboutPage","useState","modalIsVisible","setModalIsVisible","close"],"mappings":"oHACAA,EAAOC,QAAU,CAAC,MAAQ,uB,kFCGpBC,EAAyE,SAAAC,GAKvE,OACQ,qBAAKC,UAAWC,IAAOC,MACnBC,MAAO,CACHC,UAAWL,EAAMM,KAAO,gBAAkB,oBAC1CC,QAASP,EAAMM,KAAO,IAAM,KAHpC,SAKKN,EAAMQ,YAMZC,iBAAKV,GAAO,SAACW,EAAWC,GAAZ,OAA0BA,EAAUL,OAASI,EAAUJ,MAAQK,EAAUH,WAAaE,EAAUF,YCH5GI,UAfsD,WACpE,MAA2CC,oBAAS,GAApD,mBAAMC,EAAN,KAAsBC,EAAtB,KAIA,OACC,mDAEC,cAAC,EAAD,CAAOT,KAAQQ,EAAgBE,MANP,WACzBD,GAAkB,IAKjB","file":"static/js/4.8972952d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__1xFMI\"};","import {memo} from 'react';\r\n\r\nimport styles from './Modal.module.css';\r\n\r\nconst Modal: React.FC<{show: boolean; close: () => void; children: string;}> = props => {\r\n\t/*\r\n\tuseEffect(() => {\r\n\t\t // console.log(\" Modal component update\");\r\n\t}); */\r\n        return (\r\n                <div className={styles.modal}\r\n                    style={{\r\n                        transform: props.show ? 'TranslateY(0)' : 'TranslateY(-100%)',\r\n                        opacity: props.show ? '1' : '0'\r\n                    }}>\r\n                    {props.children}\r\n                </div>\r\n        );\r\n};\r\n\r\n\r\nexport default memo(Modal, (prevProps, nextProps) => nextProps.show === prevProps.show && nextProps.children === prevProps.children);","import Modal from '../components/ui/Modal';\r\nimport {useState} from 'react';\r\n\r\nconst AboutPage: React.FC<{ show?: boolean; close?: () => void; }> = () => {\r\n\tconst[modalIsVisible, setModalIsVisible] = useState(true);\r\n\tconst closeModalHandler = () => {\r\n\t\tsetModalIsVisible(false);\r\n\t};\r\n\treturn (\r\n\t\t<div>\r\n\t\t\tSearch Page!!!!!\r\n\t\t\t<Modal show = {modalIsVisible} close = {closeModalHandler}>\r\n\t\t\t\tМодальное окно\r\n\t\t\t</Modal>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default AboutPage;"],"sourceRoot":""}